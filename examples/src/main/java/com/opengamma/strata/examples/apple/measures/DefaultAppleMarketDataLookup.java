package com.opengamma.strata.examples.apple.measures;

import com.opengamma.strata.basics.currency.Currency;
import com.opengamma.strata.calc.runner.FunctionRequirements;
import com.opengamma.strata.data.MarketData;
import com.opengamma.strata.data.scenario.ScenarioMarketData;
import java.io.Serializable;
import java.util.Map;
import java.util.NoSuchElementException;
import org.joda.beans.ImmutableBean;
import org.joda.beans.MetaBean;
import org.joda.beans.MetaProperty;
import org.joda.beans.gen.BeanDefinition;
import org.joda.beans.impl.direct.DirectFieldsBeanBuilder;
import org.joda.beans.impl.direct.DirectMetaBean;
import org.joda.beans.impl.direct.DirectMetaPropertyMap;

@BeanDefinition
public class DefaultAppleMarketDataLookup implements AppleMarketDataLookup, ImmutableBean,
    Serializable {

  /**
   * The serialization version id.
   */
  private static final long serialVersionUID = 1L;

  static {
    MetaBean.register(DefaultAppleMarketDataLookup.Meta.INSTANCE);
  }

  /**
   * Restricted constructor.
   *
   * @param builder the builder to copy from, not null
   */
  protected DefaultAppleMarketDataLookup(DefaultAppleMarketDataLookup.Builder builder) {
  }
  //------------------------- AUTOGENERATED START -------------------------

  /**
   * The meta-bean for {@code DefaultAppleMarketDataLookup}.
   *
   * @return the meta-bean, not null
   */
  public static DefaultAppleMarketDataLookup.Meta meta() {
    return DefaultAppleMarketDataLookup.Meta.INSTANCE;
  }

  /**
   * Returns a builder used to create an instance of the bean.
   *
   * @return the builder, not null
   */
  public static DefaultAppleMarketDataLookup.Builder builder() {
    return new DefaultAppleMarketDataLookup.Builder();
  }

  @Override
  public FunctionRequirements requirements(final Currency currency) {
    return FunctionRequirements.empty();
  }

  @Override
  public AppleScenarioMarketData marketDataView(final ScenarioMarketData marketData) {
    return DefaultAppleScenarioMarketData.builder().lookup(this).marketData(marketData).build();
  }

  @Override
  public AppleMarketData marketDataView(final MarketData marketData) {
    return DefaultAppleMarketData.builder().lookup(this).marketData(marketData).build();
  }

  @Override
  public DefaultAppleMarketDataLookup.Meta metaBean() {
    return DefaultAppleMarketDataLookup.Meta.INSTANCE;
  }

  //-----------------------------------------------------------------------

  /**
   * Returns a builder that allows this bean to be mutated.
   *
   * @return the mutable builder, not null
   */
  public Builder toBuilder() {
    return new Builder(this);
  }

  @Override
  public boolean equals(Object obj) {
    if (obj == this) {
      return true;
    }
    return obj != null && obj.getClass() == this.getClass();
  }

  @Override
  public int hashCode() {
    int hash = getClass().hashCode();
    return hash;
  }

  @Override
  public String toString() {
    StringBuilder buf = new StringBuilder(32);
    buf.append("DefaultAppleMarketDataLookup{");
    int len = buf.length();
    toString(buf);
    if (buf.length() > len) {
      buf.setLength(buf.length() - 2);
    }
    buf.append('}');
    return buf.toString();
  }

  protected void toString(StringBuilder buf) {
  }

  //-----------------------------------------------------------------------

  /**
   * The meta-bean for {@code DefaultAppleMarketDataLookup}.
   */
  public static class Meta extends DirectMetaBean {

    /**
     * The singleton instance of the meta-bean.
     */
    static final Meta INSTANCE = new Meta();

    /**
     * The meta-properties.
     */
    private final Map<String, MetaProperty<?>> metaPropertyMap$ = new DirectMetaPropertyMap(
        this, null);

    /**
     * Restricted constructor.
     */
    protected Meta() {
    }

    @Override
    public DefaultAppleMarketDataLookup.Builder builder() {
      return new DefaultAppleMarketDataLookup.Builder();
    }

    @Override
    public Class<? extends DefaultAppleMarketDataLookup> beanType() {
      return DefaultAppleMarketDataLookup.class;
    }

    @Override
    public Map<String, MetaProperty<?>> metaPropertyMap() {
      return metaPropertyMap$;
    }

    //-----------------------------------------------------------------------
  }

  //-----------------------------------------------------------------------

  /**
   * The bean-builder for {@code DefaultAppleMarketDataLookup}.
   */
  public static class Builder extends DirectFieldsBeanBuilder<DefaultAppleMarketDataLookup> {

    /**
     * Restricted constructor.
     */
    protected Builder() {
    }

    /**
     * Restricted copy constructor.
     *
     * @param beanToCopy the bean to copy from, not null
     */
    protected Builder(DefaultAppleMarketDataLookup beanToCopy) {
    }

    //-----------------------------------------------------------------------
    @Override
    public Object get(String propertyName) {
      throw new NoSuchElementException("Unknown property: " + propertyName);
    }

    @Override
    public Builder set(String propertyName, Object newValue) {
      throw new NoSuchElementException("Unknown property: " + propertyName);
    }

    @Override
    public Builder set(MetaProperty<?> property, Object value) {
      super.set(property, value);
      return this;
    }

    @Override
    public DefaultAppleMarketDataLookup build() {
      return new DefaultAppleMarketDataLookup(this);
    }

    //-----------------------------------------------------------------------
    @Override
    public String toString() {
      StringBuilder buf = new StringBuilder(32);
      buf.append("DefaultAppleMarketDataLookup.Builder{");
      int len = buf.length();
      toString(buf);
      if (buf.length() > len) {
        buf.setLength(buf.length() - 2);
      }
      buf.append('}');
      return buf.toString();
    }

    protected void toString(StringBuilder buf) {
    }

  }

  //-------------------------- AUTOGENERATED END --------------------------
}
